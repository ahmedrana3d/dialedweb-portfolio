/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
export default function Monitor(props) {



const [monitorPos, setMonitorPos] = useState([-37.3600,-32.1700,0])
  useEffect(() => {
    const handleResize = () => {
      // Adjust xPosition based on screen size
      const screenWidth = window.innerWidth;
      if (screenWidth < 1000) {
        setMonitorPos([0,0,0])
      } else {
     setMonitorPos([-37.3600,-32.1700,0])
      }

    };

    handleResize(); // Call it once to set initial position

    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);


  const { nodes, materials } = useGLTF('models/Monitor_Updated.glb')
  return (
    <group {...props} dispose={null} position={monitorPos} rotation={[0 , -Math.PI/2 , 0]}>
        <mesh castShadow receiveShadow geometry={nodes.iMac.geometry} material={materials.Mat} />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.iMac001.geometry}
        material={materials['Material.001']}
      />
    </group>
  )
}

useGLTF.preload('models/Monitor_Updated.glb')
